DELIMITER //

CREATE PROCEDURE GenerateTableDataCSV()
BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE tbl_name VARCHAR(255);
    DECLARE col_list TEXT DEFAULT '';
    DECLARE query TEXT;
    
    -- Cursor for all tables in the current database
    DECLARE table_cursor CURSOR FOR 
        SELECT table_name FROM information_schema.tables 
        WHERE table_schema = DATABASE() AND table_type = 'BASE TABLE';
    
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
    
    -- Create temporary table (works in MySQL 8.0)
    DROP TEMPORARY TABLE IF EXISTS table_data_output;
    CREATE TEMPORARY TABLE table_data_output (
        output_line TEXT
    );
    
    OPEN table_cursor;
    
    table_loop: LOOP
        FETCH table_cursor INTO tbl_name;
        IF done THEN
            LEAVE table_loop;
        END IF;
        
        -- Reset column list for each table
        SET col_list = '';
        
        -- Get all columns for the current table
        SELECT GROUP_CONCAT(
            CONCAT(
                '''"', COLUMN_NAME, '"'', ',
                'IFNULL(CONCAT(''"'', REPLACE(IFNULL(`', COLUMN_NAME, '`, ''NULL''), ''"'', ''""''), ''"''), ''"NULL"'')'
            ) SEPARATOR ', '
        ) INTO col_list
        FROM information_schema.columns
        WHERE table_schema = DATABASE() AND table_name = tbl_name
        ORDER BY ORDINAL_POSITION;
        
        -- Build and execute the dynamic query
        SET @query = CONCAT(
            'INSERT INTO table_data_output ',
            'SELECT CONCAT_WS('','', ',
            CONCAT('''"', tbl_name, '"'''), ', ',
            col_list,
            ') FROM `', tbl_name, '`'
        );
        
        PREPARE stmt FROM @query;
        EXECUTE stmt;
        DEALLOCATE PREPARE stmt;
    END LOOP;
    
    CLOSE table_cursor;
    
    -- Display the results
    SELECT output_line FROM table_data_output;
    
    -- Clean up (optional as temp tables are session-scoped)
    DROP TEMPORARY TABLE IF EXISTS table_data_output;
END //

DELIMITER ;
